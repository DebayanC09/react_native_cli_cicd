name: React Native CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Allows manual trigger

env:
  JAVA_VERSION: '17'
  NODE_VERSION: '20.14.0'

jobs:
  build:
    name: Build and Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for potential versioning

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'  # Enables npm caching

      - name: Install Dependencies
        run: |
          npm ci  # Uses package-lock.json for deterministic builds
          npx react-native doctor  # Verify environment setup

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: ${{ env.JAVA_VERSION }}
          cache: 'gradle'  # Enables Gradle caching

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Cache Build Files
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            node_modules
            android/.gradle
            android/app/build
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Decode Google Services JSON
        run: |
          if [ -z "$FIREBASE_CREDENTIALS" ]; then
            echo "Error: FIREBASE_CREDENTIALS secret is not set"
            exit 1
          fi
          echo "$FIREBASE_CREDENTIALS" | base64 --decode > android/app/google-services.json
        env:
          FIREBASE_CREDENTIALS: ${{ secrets.FIREBASE_CREDENTIALS }}

      - name: Verify google-services.json
        run: |
          if [ ! -f "android/app/google-services.json" ]; then
            echo "Error: google-services.json not found"
            exit 1
          fi

      - name: Setup Project
        run: |
          chmod +x android/gradlew
          cd android && ./gradlew clean && cd ..

      - name: Bundle JavaScript
        run: |
          mkdir -p android/app/src/main/assets
          npx react-native bundle \
            --platform android \
            --dev false \
            --entry-file index.js \
            --bundle-output android/app/src/main/assets/index.android.bundle \
            --assets-dest android/app/src/main/res

      - name: Build Release APK
        run: |
          cd android
          ./gradlew assembleRelease --no-daemon
          cd ..

      - name: Upload APK Artifact
        uses: actions/upload-artifact@v3
        with:
          name: app-release
          path: android/app/build/outputs/apk/release/app-release.apk
          retention-days: 5

      - name: Deploy to Firebase
        if: github.ref == 'refs/heads/main'  # Only deploy on main branch
        run: |
          npm install -g firebase-tools
          CREDENTIALS_JSON=$(echo $FIREBASE_CREDENTIALS | base64 --decode)
          TOKEN=$(echo $CREDENTIALS_JSON | jq -r .client_email)
          
          if [ -z "$FIREBASE_APP_ID" ]; then
            echo "Error: FIREBASE_APP_ID secret is not set"
            exit 1
          fi
          
          firebase appdistribution:distribute android/app/build/outputs/apk/release/app-release.apk \
            --app ${{ secrets.FIREBASE_APP_ID }} \
            --release-notes "Build: ${{ github.run_number }} - Commit: $(git rev-parse --short HEAD)" \
            --groups "testers" \
            --token "$TOKEN"
        env:
          FIREBASE_CREDENTIALS: ${{ secrets.FIREBASE_CREDENTIALS }}
          FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}